// Wrapper methods.
// Adding __ prefix so that users can overwrite the original one.
print("default-isynth.n loaded")

// Alias for convenience
var Kernel.M object = Kernel

// Utility to create a vanilla object.
var Kernel.Kernel_ object = Kernel.clone()

def Kernel.new() (object) {
  return Kernel_.clone()
}

def Kernel.compile() {
  __compile("")
  __compile("clean_unused_resource,clean_empty_state,clean_unreachable_state,array_to_mem,wire_insn,clean_empty_state")
}

@embed(resource = "wait_cycles",
 verilog = "nli_wait.v",
 file= "copy",
 module= "wait_cycles")
def Kernel.__wait(cycles int) {
}

@embed(resource = "exit",
 verilog = "nli_exit.v",
 file = "copy",
 module = "nli_exit")
def Kernel.__exit() {
}
