#! /usr/bin/python

# utility to run commands required to run compiled verilog.
# example.
# $ run-file /tmp/a.karuta /tmp/a.v

import os
import re
import sys

args = sys.argv[1:]

kfile = ""
vfile = "/tmp/a.v"
ccfile = ""
aout = "/tmp/a.out"
tbfile = "tests/test_tb.v"
voptions = ["-Ilib/"]
karuta_cmd = "./karuta"
iverilog_cmd = "iverilog"

for arg in sys.argv:
  if re.search("\.karuta$", arg):
    print "kfile=" + arg
    kfile = arg
  if re.search("\.v$", arg):
    print "vfile=" + arg
    vfile = arg
  if re.search("\.cc$", arg) or re.search("\.cpp$", arg):
    print "ccfile=" + arg
    ccfile = arg
  if arg == "-m":
    voptions.append("-DKARUTA_RAM")
  if arg == "-l":
    voptions.append("-DLONG_SIM")
  if arg == "-d":
    voptions.append("-DKARUTA_DEBUG")

def run_command(args):
  cmd = " ".join(args)
  print "executing :" + cmd
  res = os.system(cmd)
  if res:
    print "stop" + str(res)
    exit()

# run karuta
if kfile:
  cmd = [karuta_cmd, kfile, "--module_prefix=mod"]
  run_command(cmd)
else:
  print "skipping karuta"

# run c output
if ccfile:
  cmd = ["g++", ccfile, "-I.", "-o", aout]
  run_command(cmd)
  cmd = [aout]
  run_command(cmd)
  exit()

# run iverilog
voption = " ".join(voptions)
cmd = [iverilog_cmd, vfile, tbfile, voption]
run_command(cmd)

# run output
cmd = ["./a.out"]
run_command(cmd)
